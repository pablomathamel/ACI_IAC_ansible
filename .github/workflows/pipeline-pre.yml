# Networking CICD Pipeline for preproduction branch
name: pipeline-pre

# Controls when the workflow will run
on:
  # Triggers the workflow on push (and merge) events on the preprod branch
  push:
    branches: [preproduction]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# Environment variables
env:
  PYTHONWARNINGS: "ignore:Unverified HTTPS request"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

# Run ansible lint on the complete directory
  ansible-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: set_variables
        run: |
          echo "printing variable sha"
          echo {{ vars.GIT_COMMIT_SHA_PRE }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install yamllint
        run: pip install yamllint

      - name: Lint YAML files
        run: yamllint ./playbooks

      - name: Send Webex Notification
        uses: adealdag/action-webex-notification@python-v1
        if: always()
        with:
          webexToken: ${{ secrets.WEBEX_TOKEN }}
          roomID: ${{ secrets.ROOM_ID }}
          markdownMsg: |
            ### [${{ github.job }}] ${{ github.repository }} - ${{ github.event.head_commit.message }}
            * Trigger: ${{ github.event_name }}
            * Git SHA: ${{ github.sha }}
            * Status: ${{ job.status }}
            * Details URL: [Job Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

  # Run ansible dry-run using check mode. Result is uploaded as artifact
  ansible-dry-run:
    runs-on: self-hosted
    needs: ansible-lint
    container: pmathame/ansible:latest

    steps:
      - uses: actions/checkout@v2

      - name: Run ansible playbook dry-run
        run: |
          ansible --version
          ansible-playbook -i inventory.yaml deploy.yaml --check
          ls -al
        working-directory: playbooks

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: config-dump
          path: playbooks/dryrun_data.json

      - name: Send Webex Notification
        uses: adealdag/action-webex-notification@python-v1
        if: always()
        with:
          webexToken: ${{ secrets.WEBEX_TOKEN }}
          roomID: ${{ secrets.ROOM_ID }}
          markdownMsg: |
            ### [${{ github.job }}] ${{ github.repository }} - ${{ github.event.head_commit.message }}
            * Trigger: ${{ github.event_name }}
            * Git SHA: ${{ github.sha }}
            * Status: ${{ job.status }}
            * Details URL: [Job Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

  # Run pre-change validation on Nexus Dashboard Insights. Uses the artifact saved previously
  pre-change-validation:
    runs-on: self-hosted
    needs: ansible-dry-run
    container: pmathame/ansible:latest

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: config-dump
          path: tools/change-validation

      - name: Run pre-change analysis playbook
        run: |
          ansible --version
          rm -rf $HOME/.ansible/pc
          ansible-playbook -i inventory.yaml pre-change-validation.yaml
        working-directory: tools/change-validation

      - name: Send Webex Notification
        uses: adealdag/action-webex-notification@python-v1
        if: always()
        with:
          webexToken: ${{ secrets.WEBEX_TOKEN }}
          roomID: ${{ secrets.ROOM_ID }}
          markdownMsg: |
            ### [${{ github.job }}] ${{ github.repository }} - ${{ github.event.head_commit.message }}
            * Trigger: ${{ github.event_name }}
            * Git SHA: ${{ github.sha }}
            * Status: ${{ job.status }}
            * Details URL: [Nexus Dashboard Insights](${{ secrets.ND_HOST }}/appcenter/cisco/nexus-insights/ui/#/changeManagement/preChangeAnalysis)
